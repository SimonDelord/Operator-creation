kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: 'false'
    deployment.kubernetes.io/revision: '1'
  name: webhook-kafka
  namespace: {{ .Values.NAMESPACE }}
  labels:
    app: webhook-kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhook-kafka
  template:
    metadata:
      labels:
        app: webhook-kafka
        deployment: webhook-kafka
    spec:
      containers:
        - name: webhook-kafka
          image: >-
            quay.io/rhn_support_sdelord/kafka/webhook-kafka
          ports:
            - containerPort: 8001
              protocol: TCP
          env:
          - name: KAFKA_TOPIC
            valueFrom:
              configMapKeyRef:
                name: webhook-configmap
                key: KAFKA_TOPIC_KEY
          - name : WEBHOOK_ROUTE
            valueFrom:
              configMapKeyRef:
                name: webhook-configmap
                key: WEBHOOK_ROUTE_KEY
          - name: BOOTSTRAP_SERVER
            valueFrom:
              configMapKeyRef:
                name: webhook-configmap
                key: BOOTSTRAP_SERVER_KEY
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
